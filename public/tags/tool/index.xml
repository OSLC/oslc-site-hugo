<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on OSLC - Open Services for Lifecycle Collaboration</title>
    <link>http://open-services.net/tags/tool/</link>
    <description>Recent content in Tool on OSLC - Open Services for Lifecycle Collaboration</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017 OSLC; all rights reserved.</copyright>
    <lastBuildDate>Wed, 22 May 2019 22:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://open-services.net/tags/tool/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eclipse Lyo</title>
      <link>http://open-services.net/resources/tool-20111111/</link>
      <pubDate>Wed, 22 May 2019 22:00:00 +0000</pubDate>
      
      <guid>http://open-services.net/resources/tool-20111111/</guid>
      <description>The Eclipse Lyo project provides an SDK to help Java developers adopt OSLC specifications and build OSLC-compliant tools.
Lyo Features
 OSLC4J SDK: Lyo’s central component is the OSLC4J SDK (Software Development Kit) that helps build REST-based servers and clients, compliant with the OSLC standard. Lyo Designer: Lyo Designer is an Eclipse plugin that allows one to graphically model (1) the overall system architecture, (2) the information model of the RDF resources being shared, and (3) the individual services and operations of each Server in the system.</description>
    </item>
    
    <item>
      <title>OSLC4JS</title>
      <link>http://open-services.net/resources/oslc4js/</link>
      <pubDate>Wed, 30 Aug 2017 15:20:55 +0200</pubDate>
      
      <guid>http://open-services.net/resources/oslc4js/</guid>
      <description>OSLC4JS is a set of related open source projects that support the creation and integration of Open Services for Lifecycle Collaboration (OSLC)-based client and server applications that leverage JavaScript and Node.js capabilities. OSLC4JS projects cover the complete end-to-end capabilities required to build, extend, and integrate web apps that exploit OSLC integration capabilities and linked data resources.
Why should I contribute?
Because you’ll see a lot of benefits. Developers will find that it makes it easy to add OSLC capabilities to any Node or Express Web application, including client and server components of that application.</description>
    </item>
    
    <item>
      <title>OSLC4Net</title>
      <link>http://open-services.net/resources/tool-20130121/</link>
      <pubDate>Mon, 21 Jan 2013 20:57:23 +0200</pubDate>
      
      <guid>http://open-services.net/resources/tool-20130121/</guid>
      <description>A toolkit for developing OSLC consumers and providers for .NET environments that contains the following tools:
 OSLC4NET SDK, which is very similar to the OSLC4J component of Eclipse Lyo: you can model OSLC resources as .NET objects, annotate them with OSLC attributes, and use the REST services provided by ASP.NET MVC 4 for HTTP requests and request handling. OSLC Change Management consumer implementation in the form of a test suite  Go</description>
    </item>
    
  </channel>
</rss>